definitions:
  dtos.AllConfigurations:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dtos.BehaviourStreamsResponse:
    properties:
      countAlertLevel:
        type: integer
      countEvacuationLevel:
        type: integer
      countLowWaterLevel:
        type: integer
      totalValuesCount:
        type: integer
    type: object
  dtos.CalibratedStreamsData:
    properties:
      qualifier:
        type: string
      time:
        type: string
      value:
        type: number
    type: object
  dtos.CalibratedStreamsDataResponse:
    properties:
      mainStreams:
        items:
          $ref: '#/definitions/dtos.CalibratedStreamsData'
        type: array
      p05Streams:
        items:
          $ref: '#/definitions/dtos.CalibratedStreamsData'
        type: array
      p25Streams:
        items:
          $ref: '#/definitions/dtos.CalibratedStreamsData'
        type: array
      p75Streams:
        items:
          $ref: '#/definitions/dtos.CalibratedStreamsData'
        type: array
      p95Streams:
        items:
          $ref: '#/definitions/dtos.CalibratedStreamsData'
        type: array
    type: object
  dtos.Configuration:
    properties:
      id:
        type: integer
      name:
        type: string
      nodes:
        items:
          $ref: '#/definitions/dtos.Node'
        type: array
      sendNotifications:
        type: boolean
    required:
    - name
    type: object
  dtos.ConfiguredStream:
    properties:
      calibrationId:
        type: integer
      checkErrors:
        type: boolean
      configuredStreamId:
        type: integer
      lowerThreshold:
        type: number
      metrics:
        items:
          $ref: '#/definitions/entities.Metric'
        type: array
      observedRelatedStreamId:
        type: integer
      redundanciesIds:
        items:
          type: integer
        type: array
      streamId:
        type: integer
      streamType:
        type: integer
      updateFrequency:
        type: number
      upperThreshold:
        type: number
    type: object
  dtos.ConfiguredStreamCreate:
    properties:
      calibrationId:
        type: integer
      checkErrors:
        type: boolean
      lowerThreshold:
        type: number
      metrics:
        items:
          $ref: '#/definitions/entities.Metric'
        type: array
      observedRelatedStreamId:
        type: integer
      redundanciesIds:
        items:
          type: integer
        type: array
      streamId:
        type: integer
      streamType:
        type: integer
      updateFrequency:
        type: number
      upperThreshold:
        type: number
    type: object
  dtos.CreateConfiguration:
    properties:
      name:
        type: string
      nodes:
        items:
          $ref: '#/definitions/dtos.CreateNode'
        type: array
      sendNotifications:
        type: boolean
    required:
    - name
    type: object
  dtos.CreateNode:
    properties:
      configuredStreams:
        items:
          $ref: '#/definitions/dtos.ConfiguredStreamCreate'
        type: array
      name:
        type: string
    type: object
  dtos.DetectedErrorsOfStream:
    properties:
      content:
        items:
          $ref: '#/definitions/dtos.ErrorDto'
        type: array
      pageable:
        $ref: '#/definitions/dtos.Pageable'
    type: object
  dtos.ErrorDto:
    properties:
      detectedDate:
        type: string
      errorId:
        type: integer
      errorTypeId:
        $ref: '#/definitions/entities.ErrorType'
      errorTypeName:
        type: string
      extraInfo:
        type: string
    type: object
  dtos.ErrorIndicator:
    properties:
      ErrorId:
        $ref: '#/definitions/entities.ErrorType'
      count:
        type: integer
      errorType:
        type: string
    type: object
  dtos.ErrorResponse:
    properties:
      message:
        type: string
      timestamp:
        type: string
    type: object
  dtos.ErrorsCountPerDayAndType:
    properties:
      date:
        type: string
      errorType:
        type: string
      total:
        type: integer
    type: object
  dtos.InputsGeneralMetrics:
    properties:
      totalStations:
        type: integer
      totalStreams:
        type: integer
    type: object
  dtos.MetricCard:
    properties:
      name:
        type: string
      value:
        type: number
    type: object
  dtos.Node:
    properties:
      configuredStreams:
        items:
          $ref: '#/definitions/dtos.ConfiguredStream'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  dtos.Pageable:
    properties:
      page:
        type: integer
      pageSize:
        type: integer
      pages:
        type: integer
      totalElements:
        type: integer
    type: object
  dtos.ProcedureFilter:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dtos.Redundancies:
    properties:
      redundancies:
        items:
          type: integer
        type: array
    type: object
  dtos.StationFilter:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dtos.StreamCard:
    properties:
      calibrationId:
        type: integer
      checkErrors:
        type: boolean
      configuredStreamId:
        type: integer
      observedRelatedStreamId:
        type: integer
      procedureId:
        type: integer
      procedureName:
        type: string
      stationId:
        type: integer
      stationName:
        type: string
      streamId:
        type: integer
      streamType:
        $ref: '#/definitions/entities.StreamType'
      totalErrors:
        type: integer
      variableId:
        type: integer
      variableName:
        type: string
    type: object
  dtos.StreamCardsResponse:
    properties:
      content:
        items:
          $ref: '#/definitions/dtos.StreamCard'
        type: array
      pageable:
        $ref: '#/definitions/dtos.Pageable'
    type: object
  dtos.StreamData:
    properties:
      alertLevel:
        type: number
      calibrationId:
        type: integer
      evacuationLevel:
        type: number
      lastUpdate:
        type: string
      lowWaterLevel:
        type: number
      metrics:
        items:
          $ref: '#/definitions/dtos.MetricCard'
        type: array
      observedRelatedStreamId:
        type: integer
      owner:
        type: string
      procId:
        type: integer
      procedure:
        type: string
      station:
        type: string
      streamType:
        $ref: '#/definitions/entities.StreamType'
      unit:
        type: string
      unitId:
        type: integer
      updateFrequency:
        type: number
      varId:
        type: integer
      varName:
        type: string
    type: object
  dtos.StreamsData:
    properties:
      time:
        type: string
      value:
        type: number
    type: object
  dtos.StreamsDataResponse:
    properties:
      streams:
        items:
          $ref: '#/definitions/dtos.StreamsData'
        type: array
    type: object
  dtos.StreamsPerNode:
    properties:
      errorCount:
        type: integer
      nodeId:
        type: string
      nodeName:
        type: string
      streamsCount:
        type: integer
    type: object
  dtos.StreamsPerNodeResponse:
    properties:
      nodes:
        items:
          $ref: '#/definitions/dtos.StreamsPerNode'
        type: array
    type: object
  dtos.StreamsPerStation:
    properties:
      errorCount:
        type: integer
      stationId:
        type: string
      stationName:
        type: string
      streamsCount:
        type: integer
    type: object
  dtos.StreamsPerStationResponse:
    properties:
      stations:
        items:
          $ref: '#/definitions/dtos.StreamsPerStation'
        type: array
    type: object
  dtos.TotalStreamsWithNullValues:
    properties:
      totalStreams:
        type: integer
      totalStreamsWithNull:
        type: integer
    type: object
  dtos.TotalStreamsWithObservedOutlier:
    properties:
      totalStreams:
        type: integer
      totalStreamsWithObservedOutlier:
        type: integer
    type: object
  dtos.VariableFilter:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entities.ErrorType:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    type: integer
    x-enum-varnames:
    - NullValue
    - Missing4DaysHorizon
    - OutsideOfErrorBands
    - ForecastMissing
    - ObservedOutlier
    - ForecastOutOfBounds
  entities.Metric:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    type: integer
    x-enum-comments:
      Maximo: Configurable
      Media: Configurable
      Mediana: Configurable
      Minimo: Configurable
      Nulos: Configurable
    x-enum-varnames:
    - Mediana
    - Media
    - Maximo
    - Minimo
    - Nulos
    - Observaciones
    - AguasAlerta
    - AguasEvacuacion
    - AguasBajas
  entities.StreamType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Observed
    - Forecasted
    - Curated
info:
  contact: {}
  description: This API manages the inputs of the forecast model
  title: Inputs API
  version: "1.0"
paths:
  /configuracion:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.AllConfigurations'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener las configuraciones
      tags:
      - Configuracion
    post:
      parameters:
      - description: Add configuration
        in: body
        name: configuration
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateConfiguration'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para crear una configuracion
      tags:
      - Configuracion
    put:
      parameters:
      - description: Modify configuration
        in: body
        name: configuration
        required: true
        schema:
          $ref: '#/definitions/dtos.Configuration'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para modificar una configuracion
      tags:
      - Configuracion
  /configuracion/{id}:
    delete:
      parameters:
      - description: Id de la configuracion
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para eliminar una configuracion por id
      tags:
      - Configuracion
    get:
      parameters:
      - description: Id de la configuracion
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Configuration'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener una configuracion por id
      tags:
      - Configuracion
  /errores/{configuredStreamId}:
    get:
      parameters:
      - description: Id de la configuracion de la serie
        format: int
        in: path
        name: configuredStreamId
        required: true
        type: integer
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: mañana'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: Numero de pagina, por defecto 1
        in: query
        name: page
        type: integer
      - description: Cantidad de series por pagina, por defecto 15
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.DetectedErrorsOfStream'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener los errores de una serie dado un id
      tags:
      - Errores
  /errores/indicadores:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: hoy'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: Id de la configuracion
        format: uint
        in: query
        name: configurationId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ErrorIndicator'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener las indicadores de errores
      tags:
      - Errores
  /errores/por-dia:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: hoy'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: ID de la configuracion
        in: query
        name: configurationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ErrorsCountPerDayAndType'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener las errores detectados por dia
      tags:
      - Errores
  /errores/series-implicadas:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: hoy'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: Id de la configuracion
        format: uint
        in: query
        name: configurationId
        required: true
        type: string
      - description: Id del tipo de error
        format: uint
        in: query
        name: errorType
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ErrorIndicator'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener las indicadores de errores
      tags:
      - Errores
  /filtro/estaciones:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.StationFilter'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener las estaciones
      tags:
      - Filtros
  /filtro/procedimientos:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.ProcedureFilter'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener los procedimientos
      tags:
      - Filtros
  /filtro/variables:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dtos.VariableFilter'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener las variables
      tags:
      - Filtros
  /healthcheck:
    get:
      consumes:
      - '*/*'
      description: get the status of the server.
      produces:
      - application/json
      responses:
        "200":
          description: Server is up and running
          schema:
            type: string
      summary: Show the status of the server.
      tags:
      - Health
  /inputs/metricas-generales:
    get:
      parameters:
      - description: ID de la configuracion
        in: query
        name: configurationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.InputsGeneralMetrics'
      summary: Endpoint para obtener las metricas generales de inputs
      tags:
      - Inputs
  /inputs/series-con-nulos:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: mañana'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: ID de la configuracion
        in: query
        name: configurationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.TotalStreamsWithNullValues'
      summary: Endpoint para obtener la cantidad de series con valores nulos
      tags:
      - Inputs
  /inputs/series-fuera-umbral:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: mañana'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: ID de la configuracion
        in: query
        name: configurationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.TotalStreamsWithObservedOutlier'
      summary: Endpoint para obtener la cantidad de series con valores fuera de los
        umbrales
      tags:
      - Inputs
  /series:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: mañana'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: Filtro por ID de la serie
        in: query
        name: streamId
        type: integer
      - description: Filtro por ID de la estacion
        in: query
        name: stationId
        type: integer
      - description: Filtro por ID de procedimiento
        in: query
        name: procId
        type: integer
      - description: Filtro por ID de variable
        in: query
        name: varId
        type: integer
      - description: Numero de pagina, por defecto 1
        in: query
        name: page
        type: integer
      - description: Cantidad de series por pagina, por defecto 15
        in: query
        name: pageSize
        type: integer
      - description: ID de la configuracion
        in: query
        name: configurationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.StreamCardsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener las series configuradas de una configuracion
      tags:
      - Series
  /series/{serie_id}:
    get:
      parameters:
      - description: Id de la configuracion de la serie
        format: string
        in: query
        name: configuredStreamId
        required: true
        type: string
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: mañana'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: Id de la serie
        in: path
        name: serie_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.StreamData'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener los datos de una serie dado un id y su configuracion
      tags:
      - Series
  /series/comportamiento:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: mañana'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: ID de la configuracion
        in: query
        name: configurationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.BehaviourStreamsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener las metricas de comportamiento
      tags:
      - Series
  /series/curadas/{serie_id}:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: 5 dias despues'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: Id de la serie
        in: path
        name: serie_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.StreamsDataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener los valores de una serie curada por id
      tags:
      - Series
  /series/estaciones:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: 5 dias despues'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: ID de la configuracion
        in: query
        name: configurationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.StreamsPerStationResponse'
      summary: Endpoint para obtener el resumen de las series agrupado por estacion
      tags:
      - Series
  /series/nodos:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: 5 dias despues'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: ID de la configuracion
        in: query
        name: configurationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.StreamsPerNodeResponse'
      summary: Endpoint para obtener el resumen de las series agrupado por nodo
      tags:
      - Series
  /series/observadas/{serie_id}:
    get:
      parameters:
      - description: 'Fecha de comienzo del periodo - valor por defecto: 7 dias atras'
        format: "2006-01-02"
        in: query
        name: timeStart
        type: string
      - description: 'Fecha del final del periodo - valor por defecto: mañana'
        format: "2006-01-02"
        in: query
        name: timeEnd
        type: string
      - description: Id de la serie
        in: path
        name: serie_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.StreamsDataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener los valores de una serie observada por id
      tags:
      - Series
  /series/pronosticadas/{calibrado_id}:
    get:
      parameters:
      - description: Id del calibrado
        in: path
        name: calibrado_id
        required: true
        type: integer
      - description: Id de la serie
        format: string
        in: query
        name: serieId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.CalibratedStreamsDataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener los valores de una serie pronosticadas por id
      tags:
      - Series
  /series/redundancias/{configured_stream_id}:
    get:
      parameters:
      - description: Id de la serie configurada
        in: path
        name: configured_stream_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.Redundancies'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dtos.ErrorResponse'
      summary: Endpoint para obtener los ids de las redundancias de una serie configurada
        por id
      tags:
      - Series
swagger: "2.0"
